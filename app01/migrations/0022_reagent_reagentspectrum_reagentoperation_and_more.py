# Generated by Django 4.2.7 on 2025-10-08 11:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app01', '0021_mltaskresult_chart_data_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reagent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='试剂名称')),
                ('cas', models.CharField(db_index=True, max_length=64, verbose_name='CAS号')),
                ('reagent_type', models.CharField(choices=[('solid', '固体'), ('liquid', '液体')], max_length=16, verbose_name='试剂类型')),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=16, verbose_name='剩余量')),
                ('unit', models.CharField(choices=[('g', '克(g)'), ('mL', '毫升(mL)')], max_length=8, verbose_name='单位')),
                ('molecular_weight', models.DecimalField(decimal_places=6, max_digits=16, verbose_name='分子量')),
                ('density', models.DecimalField(decimal_places=6, max_digits=16, verbose_name='密度(g/cm³)')),
                ('smiles', models.CharField(max_length=255, verbose_name='SMILES')),
                ('formula', models.CharField(max_length=128, verbose_name='分子式')),
                ('hazard_type', models.CharField(choices=[('general', '一般'), ('oxidizing', '强氧化'), ('reducing', '强还原'), ('volatile', '高挥发'), ('toxic', '易制毒'), ('explosive', '易制爆')], default='general', max_length=20, verbose_name='危险类型')),
                ('warning_threshold', models.DecimalField(decimal_places=3, default=0, max_digits=16, verbose_name='缺料预警阈值')),
                ('expiry_date', models.DateField(verbose_name='有效期')),
                ('storage_env', models.CharField(choices=[('room', '室温'), ('refrigerator', '冰箱')], default='room', max_length=20, verbose_name='存储环境')),
                ('storage_location', models.CharField(max_length=200, verbose_name='存储位置')),
                ('chinese_aliases', models.JSONField(blank=True, default=list, verbose_name='中文别名')),
                ('english_names', models.JSONField(blank=True, default=list, verbose_name='英文名称')),
                ('color', models.CharField(blank=True, max_length=64, verbose_name='颜色')),
                ('odor', models.CharField(blank=True, max_length=128, verbose_name='气味')),
                ('melting_point', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='熔点(°C)')),
                ('boiling_point', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='沸点(°C)')),
                ('flash_point', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='闪点(°C)')),
                ('autoignition_temp', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='自燃温度(°C)')),
                ('decomposition_temp', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='分解温度(°C)')),
                ('vapor_pressure', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True, verbose_name='饱和蒸气压(kPa)')),
                ('explosion_limit', models.CharField(blank=True, max_length=64, verbose_name='爆炸极限(%)')),
                ('ph_value', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='PH值')),
                ('particle_size', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='颗粒度(μm)')),
                ('viscosity', models.DecimalField(blank=True, decimal_places=6, max_digits=16, null=True, verbose_name='粘度(mPa·s)')),
                ('refractive_index', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True, verbose_name='折射率')),
                ('water_solubility', models.CharField(blank=True, max_length=128, verbose_name='水溶解性')),
                ('logp', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True, verbose_name='油水分配系数(logP)')),
                ('is_controlled', models.BooleanField(default=False, verbose_name='是否管制品')),
                ('is_narcotic', models.BooleanField(default=False, verbose_name='是否毒品')),
                ('disposal_notes', models.TextField(blank=True, verbose_name='废弃注意事项')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '试剂',
                'verbose_name_plural': '试剂',
                'db_table': 'reagent',
                'ordering': ['name', 'cas'],
            },
        ),
        migrations.CreateModel(
            name='ReagentSpectrum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spectrum_type', models.CharField(choices=[('nmr', '核磁图谱'), ('gcms', 'GCMS图谱'), ('spectra', '光谱'), ('energy', '能谱')], max_length=16, verbose_name='图谱类型')),
                ('file_path', models.CharField(max_length=500, verbose_name='文件路径')),
                ('conditions', models.CharField(blank=True, max_length=255, verbose_name='图谱获取条件')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('reagent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spectra', to='app01.reagent', verbose_name='试剂')),
            ],
            options={
                'verbose_name': '试剂图谱',
                'verbose_name_plural': '试剂图谱',
                'db_table': 'reagent_spectrum',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReagentOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(choices=[('create', '新增'), ('update', '编辑'), ('take', '取用'), ('delete', '删除')], max_length=16, verbose_name='操作类型')),
                ('amount', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='数量变更')),
                ('unit', models.CharField(blank=True, max_length=8, verbose_name='单位')),
                ('before_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='变更前数量')),
                ('after_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=16, null=True, verbose_name='变更后数量')),
                ('remark', models.TextField(blank=True, verbose_name='备注/目的')),
                ('operated_at', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('operated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
                ('reagent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='app01.reagent', verbose_name='试剂')),
            ],
            options={
                'verbose_name': '试剂操作日志',
                'verbose_name_plural': '试剂操作日志',
                'db_table': 'reagent_operation',
                'ordering': ['-operated_at'],
            },
        ),
        migrations.AddIndex(
            model_name='reagent',
            index=models.Index(fields=['cas'], name='reagent_cas_71f8c1_idx'),
        ),
        migrations.AddIndex(
            model_name='reagent',
            index=models.Index(fields=['reagent_type'], name='reagent_reagent_9fe31f_idx'),
        ),
        migrations.AddIndex(
            model_name='reagent',
            index=models.Index(fields=['hazard_type'], name='reagent_hazard__1ade6f_idx'),
        ),
        migrations.AddIndex(
            model_name='reagent',
            index=models.Index(fields=['expiry_date'], name='reagent_expiry__5fcfbd_idx'),
        ),
        migrations.AddConstraint(
            model_name='reagent',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('reagent_type', 'solid'), ('unit', 'g')), models.Q(('reagent_type', 'liquid'), ('unit', 'mL')), _connector='OR'), name='chk_reagent_unit_matches_type'),
        ),
        migrations.AddIndex(
            model_name='reagentspectrum',
            index=models.Index(fields=['reagent', 'spectrum_type'], name='reagent_spe_reagent_c8dbd5_idx'),
        ),
        migrations.AddIndex(
            model_name='reagentoperation',
            index=models.Index(fields=['reagent', 'operation_type', 'operated_at'], name='reagent_ope_reagent_0ab67c_idx'),
        ),
    ]
