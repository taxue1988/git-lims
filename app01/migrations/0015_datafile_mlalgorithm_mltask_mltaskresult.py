# Generated by Django 4.2.7 on 2025-09-25 01:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app01', '0014_preparationstation'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, verbose_name='文件名')),
                ('original_filename', models.CharField(max_length=255, verbose_name='原始文件名')),
                ('file_path', models.CharField(max_length=500, verbose_name='文件路径')),
                ('file_size', models.BigIntegerField(verbose_name='文件大小(字节)')),
                ('status', models.CharField(choices=[('uploading', '上传中'), ('processing', '处理中'), ('ready', '就绪'), ('error', '错误')], default='uploading', max_length=20, verbose_name='状态')),
                ('total_rows', models.IntegerField(blank=True, null=True, verbose_name='总行数')),
                ('total_columns', models.IntegerField(blank=True, null=True, verbose_name='总列数')),
                ('column_names', models.JSONField(blank=True, null=True, verbose_name='列名列表')),
                ('data_preview', models.JSONField(blank=True, null=True, verbose_name='数据预览')),
                ('quality_analysis', models.JSONField(blank=True, null=True, verbose_name='质量分析结果')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '数据文件',
                'verbose_name_plural': '数据文件',
                'db_table': 'data_file',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLAlgorithm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='算法名称')),
                ('display_name', models.CharField(max_length=100, verbose_name='显示名称')),
                ('algorithm_type', models.CharField(choices=[('regression', '回归'), ('classification', '分类'), ('clustering', '聚类')], max_length=20, verbose_name='算法类型')),
                ('description', models.TextField(blank=True, verbose_name='算法描述')),
                ('parameters_schema', models.JSONField(verbose_name='参数配置模式')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '机器学习算法',
                'verbose_name_plural': '机器学习算法',
                'db_table': 'ml_algorithm',
                'ordering': ['algorithm_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MLTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='任务名称')),
                ('description', models.TextField(blank=True, verbose_name='任务描述')),
                ('algorithm_parameters', models.JSONField(verbose_name='算法参数')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('running', '运行中'), ('completed', '已完成'), ('failed', '失败'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('progress', models.FloatField(default=0.0, verbose_name='进度(0-100)')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('algorithm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.mlalgorithm', verbose_name='算法')),
                ('data_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_tasks', to='app01.datafile', verbose_name='数据文件')),
                ('test_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_tasks', to='app01.datafile', verbose_name='测试数据文件')),
                ('train_data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='train_tasks', to='app01.datafile', verbose_name='训练数据文件')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '机器学习任务',
                'verbose_name_plural': '机器学习任务',
                'db_table': 'ml_task',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MLTaskResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='准确率')),
                ('precision', models.FloatField(blank=True, null=True, verbose_name='精确率')),
                ('recall', models.FloatField(blank=True, null=True, verbose_name='召回率')),
                ('f1_score', models.FloatField(blank=True, null=True, verbose_name='F1分数')),
                ('mse', models.FloatField(blank=True, null=True, verbose_name='均方误差')),
                ('r2_score', models.FloatField(blank=True, null=True, verbose_name='R²分数')),
                ('model_path', models.CharField(blank=True, max_length=500, verbose_name='模型文件路径')),
                ('detailed_results', models.JSONField(blank=True, null=True, verbose_name='详细结果')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='app01.mltask', verbose_name='任务')),
            ],
            options={
                'verbose_name': '机器学习任务结果',
                'verbose_name_plural': '机器学习任务结果',
                'db_table': 'ml_task_result',
            },
        ),
    ]
